services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "echo ruok | nc 127.0.0.1 2181"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - bank-offers

  kafka:
    image: bitnami/kafka:3.6.2
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/opt/bitnami/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - bank-offers

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - bank-offers

  postgres-bank:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=bankdb
      - POSTGRES_USER=bank_user
      - POSTGRES_PASSWORD=bank_pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "bank_user"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - bank-offers

  postgres-product:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=productdb
      - POSTGRES_USER=product_user
      - POSTGRES_PASSWORD=product_pass
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "product_user"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - bank-offers

  bank-service:
    build:
      context: ../../bank-service
    image: bank-service:local
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - BANK_SERVICE_DB_URL=jdbc:postgresql://postgres-bank:5432/bankdb
      - BANK_SERVICE_DB_USERNAME=bank_user
      - BANK_SERVICE_DB_PASSWORD=bank_pass
    depends_on:
      postgres-bank:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - bank-offers

  product-service:
    build:
      context: ../../product-service
    image: product-service:local
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PRODUCT_SERVICE_DB_URL=jdbc:postgresql://postgres-product:5432/productdb
      - PRODUCT_SERVICE_DB_USERNAME=product_user
      - PRODUCT_SERVICE_DB_PASSWORD=product_pass
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - BANK_SERVICE_URL=http://bank-service:8081
    depends_on:
      postgres-product:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - bank-offers

  notification-service:
    build:
      context: ../../notification-service
    image: notification-service:local
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - bank-offers

  gateway-service:
    build:
      context: ../../gateway-service
    image: gateway-service:local
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - BANK_SERVICE_URL=http://bank-service:8081
      - PRODUCT_SERVICE_URL=http://product-service:8082
    depends_on:
      bank-service:
        condition: service_started
      product-service:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - bank-offers

networks:
  bank-offers:
    driver: bridge
